
/**
 * This file is automatically generated by wheat-build.
 * Do not modify this file -- YOUR CHANGES WILL BE ERASED!
 */

package x7c1.linen.res.layout;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.view.View;
import x7c1.wheat.ancient.resource.ViewHolderProvider;
import x7c1.wheat.ancient.resource.ViewHolderProviderFactory;
import x7c1.linen.R;
import x7c1.linen.glue.res.layout.SettingChannelSourceCopy;

public class SettingChannelSourceCopyProvider implements ViewHolderProvider<SettingChannelSourceCopy> {

    private final LayoutInflater inflater;

    public SettingChannelSourceCopyProvider(Context context){
        this.inflater = LayoutInflater.from(context);
    }

    public SettingChannelSourceCopyProvider(LayoutInflater inflater){
        this.inflater = inflater;
    }

    @Override
    public int layoutId(){
        return R.layout.setting_channel_source_copy;
    }

    @Override
    public SettingChannelSourceCopy inflateOn(ViewGroup parent){
        return inflate(parent, false);
    }

    @Override
    public SettingChannelSourceCopy inflate(ViewGroup parent, boolean attachToRoot){
        View view = inflater.inflate(R.layout.setting_channel_source_copy, parent, attachToRoot);
        return factory().createViewHolder(view);
    }

    public static ViewHolderProviderFactory<SettingChannelSourceCopy> factory(){
        return new ViewHolderProviderFactory<SettingChannelSourceCopy>() {
            @Override
            public ViewHolderProvider<SettingChannelSourceCopy> create(LayoutInflater inflater){
                return new SettingChannelSourceCopyProvider(inflater);
            }
            @Override
            public ViewHolderProvider<SettingChannelSourceCopy> create(Context context){
                return new SettingChannelSourceCopyProvider(context);
            }
            @Override
            public SettingChannelSourceCopy createViewHolder(View view){
                return new SettingChannelSourceCopy(
                    view
                );
            }
        };
    }
}
